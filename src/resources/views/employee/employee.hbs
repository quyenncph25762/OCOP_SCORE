<style>
    .modal-employee {
        max-width: 950px;
    }

    @media screen and (max-width: 765px) {
        .modal-employee {
            width: 100%;
        }

        .file-upload {
            margin-bottom: 40px;
        }
    }

    .bootstrap-select:not(.input-group-btn) {
        display: block;
    }
</style>
{{> header}}
<div class="content-wrapper">
    <div class="container-fluid">
        <div class="row" style="max-width: 100%; display: contents;">
            <ul class="search-customer"
                style="list-style: none; display:flex; justify-content: space-between; align-items: center;">
                <button class="btn btn-danger btnDeleteAll btnDisabled" style="float: left;">Xóa mục đã chọn</button>
                <div class="import_customer_button"
                    style="list-style: none; display:flex; justify-content: space-between; align-items: center;">
                    <button class="btn btn-info" data-toggle="modal" data-target="#exampleModal">Thêm mới</button>
                </div>
                {{> modalEmployee}}
            </ul>
            </li>
            </ul>
        </div>
    </div>
    {{!-- body --}}
    <div class="row" style="display: contents;">
        <div class="col-lg-6" style="max-width: 100%;">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items">
                        <h5 class="card-title">Danh sách cán bộ</h5>
                        <span class="d-inline-block ml-3" tabindex="0" data-toggle="tooltip" title="Thùng rác của bạn">
                            <a href="/employee/trash">
                                <i class="icon-trash" style="font-size: 20px; color:red; cursor: pointer;"></i>
                            </a>
                        </span>
                    </div>
                    <div class="table-responsive">
                        <table id="myTable" class="table datatables table-bordered table-hover table-striped">
                            <thead>
                                <tr>
                                    <th {{#ifCond Employee.length 0}}hidden{{/ifCond}}>
                                        <div class="checkbox-wrapper-42 checkbox">
                                            <input id="checkAll" type="checkbox" class="check" />
                                            <label class="cbx" for="checkAll"></label>
                                        </div>
                                    </th>
                                    <th>Mã tài khoản</th>
                                    <th>Họ và tên</th>
                                    <th>Giới tính</th>
                                    <th>Vị trí chức danh</th>
                                    <th>Tổ / phòng ban</th>
                                    <th>Vai trò</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each Employee}}
                                <tr>
                                    <td>
                                        <div class="checkbox-wrapper-42 checkbox">
                                            <input id="cbx-42{{this._id}}" type="checkbox" class="check"
                                                data-idCheckBox="{{this._id}}" />
                                            <label class="cbx" for="cbx-42{{this._id}}"></label>
                                        </div>
                                    </td>
                                    <td>{{this.Code}}</td>
                                    <td>
                                        <div class="" style="display: flex;flex-direction: column;">
                                            <p class="text-black-custom mb-0">{{this.FullName}}</p>
                                            <p style="font-weight: 700" class="text-hover-blue">{{this.UserName}}</p>
                                        </div>
                                    </td>
                                    <td>{{this.Gender}}</td>
                                    {{#ifCond workdepartment_IsDeleted 0}}
                                    <td>
                                        <p class="text-overhidden">{{this.workdepartment_name}}</p>
                                    </td>
                                    {{else}}
                                    <td class="text-hightlight">Không xác định</td>
                                    {{/ifCond}}
                                    {{#ifCond workposition_IsDeleted 0}}
                                    <td>{{this.workposition_name}}</td>
                                    {{else}}
                                    <td class="text-hightlight">Không xác định</td>
                                    {{/ifCond}}
                                    {{#ifCond role_isDeleted 0}}
                                    <td>{{this.role_name}}</td>
                                    {{else}}
                                    <td class="text-hightlight">Không xác định</td>
                                    {{/ifCond}}
                                    <td scope="row">
                                        {{#ifCondNot ../User.id 1}}
                                        <span class="d-inline-block" tabindex="0" data-toggle="tooltip"
                                            title="Chỉnh sửa">
                                            <ion-icon name="create-outline" data-toggle="modal"
                                                data-target="#exampleModal{{this._id}}"></ion-icon>
                                        </span>
                                        {{/ifCondNot}}
                                        {{> modalEmployee WorkDepartMent=../WorkDepartMent
                                        WorkPosition=../WorkPosition Role=../Role District=../District
                                        User=../User}}
                                        {{!-- end-modal --}}
                                        {{#ifCondNot ../User._id this._id}}
                                        <span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Xóa">
                                            <ion-icon id="icon_moveToTrash" name="trash-outline" data-id="{{this._id}}">
                                            </ion-icon>
                                        </span>
                                        {{/ifCondNot}}
                                    </td>
                                </tr>
                                {{/each }}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div><!--End Row-->
    </div>
    <!-- End container-fluid-->
</div><!--End content-wrapper-->
{{> footer}}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="/assets/js/custom.js"></script>
<script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>
<script class="jsbin" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
{{!-- upload anh --}}
<script>
    function onclickImage(Id) {
        console.log(`avatarPreview` + Id)
        const img = document.getElementById('avatar' + Id)
        const imagePreview = document.getElementById(`avatarPreview${Id}`)
        console.log(imagePreview)
        img.click();
        // change ảnh khi chọ
        img.addEventListener('change', function () {
            if (img.files && img.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                };
                reader.readAsDataURL(img.files[0]);
            }
        });
    }
</script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() {
        dataLayer.push(arguments);
    }
    gtag('js', new Date());
    gtag('config', 'UA-56159088-1');
    // checkbox All
    $("#checkAll").click(function (e) {
        $(".check").prop('checked', $(this).prop('checked'));
    });
</script>
{{!-- actions remove --}}
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toastData = localStorage.getItem('toast');
        if (toastData) {
            const toast = JSON.parse(toastData);
            $.toast(toast);
            localStorage.removeItem('toast');
        }
        const btnTrash = document.querySelectorAll("#icon_moveToTrash");
        //remove One
        for (let btn of btnTrash) {
            btn.addEventListener("click", (event) => {
                $.confirm({
                    title: '<ion-icon name="trash-bin-outline"></ion-icon>',
                    content: 'Bạn có chắc chắn muốn xóa ?',
                    buttons: {
                        confirm: {
                            text: 'Confirm',
                            btnClass: 'btn-red',
                            action: function () {
                                // Lấy ID của mục cần xóa từ thuộc tính data-id của nút
                                const id = event.target.dataset.id;

                                // Gọi API xóa mục
                                fetch(`/employee/removeToTrash/${id}`, {
                                    method: 'DELETE'
                                }).then(response => {
                                    if (response.ok) {
                                        localStorage.setItem('toast', JSON.stringify({
                                            position: "top-right",
                                            heading: 'Xóa thành công',
                                            text: 'Đã xóa thành công thành công',
                                            icon: 'success',
                                            loader: true,
                                            loaderBg: '#9EC600',
                                            showHideTransition: 'slide',
                                            stack: 4
                                        }));
                                        window.location.reload()
                                    } else {
                                        alert('Có lỗi xảy ra khi xóa mục');
                                    }
                                }).catch(error => {
                                    $.alert('Đã hủy');
                                });
                            }
                        },
                        cancel: function () {
                            $.alert('Đã hủy!');
                        }
                    }
                });
            })
        }
        const btnsCheck = document.querySelectorAll(".check")
        const btnDeleteAll = document.querySelector(".btnDeleteAll")
        const btnDisabled = document.querySelector(".btnDisabled")
        //Chưa checked thì disbale nút xóa all
        let count = 0
        const checkBtnDisabled = () => {
            if (count === 0) {
                btnDisabled.setAttribute("disabled", true)
            } else {
                btnDisabled.removeAttribute("disabled")
            }
        }
        for (let checked of btnsCheck) {
            checkBtnDisabled()
            checked.addEventListener("click", (e) => {
                if (checked.checked) {
                    count++
                } else {
                    count--
                }
                checkBtnDisabled()
            })
        }
        //removeAll
        btnDeleteAll.addEventListener("click", async (e) => {
            $.confirm({
                title: '<ion-icon name="trash-bin-outline"></ion-icon>',
                content: 'Xác nhận xóa những đối tượng bạn đã chọn ?',
                buttons: {
                    confirm: {
                        text: 'Confirm',
                        btnClass: 'btn-red',
                        action: function () {
                            for (let btnCheck of btnsCheck) {
                                if (btnCheck.checked) {
                                    const id = btnCheck.dataset.idcheckbox
                                    fetch(`/employee/removeToTrash/${id}`, {
                                        method: 'DELETE'
                                    })
                                }
                            }
                            localStorage.setItem('toast', JSON.stringify({
                                position: "top-right",
                                heading: 'Xóa thành công',
                                text: 'Đã xóa thành công thành công',
                                icon: 'success',
                                loader: true,
                                loaderBg: '#9EC600',
                                showHideTransition: 'slide',
                                stack: 4
                            }));
                            window.location.reload()
                        }
                    },
                    cancel: function () {
                        $.alert('Đã hủy');
                    }
                }
            });
        })
    })
</script>