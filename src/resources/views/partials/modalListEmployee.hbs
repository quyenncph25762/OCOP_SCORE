<style>
    #myTableEmployee {
        font-size: 13px;
    }

    .modal-content {
        min-height: 95vh;
        overflow-y: auto;
    }

    .checkbox-wrapper-42 input[type="checkbox"]:checked~.cbx {
        border-color: transparent;
        background: #04b962;
        animation: jelly-42 0.6s ease;
    }

    @media screen and (max-width:1025px) {
        .textEmail {
            display: inline-block !important;
            word-wrap: break-word !important;
            white-space: normal !important;
            max-width: 140px !important;
            color: red !important
        }
    }
</style>


{{!-- update --}}
{{#if id}}
<div class="modal fade" id="exampleModalEmployee{{id}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="trueEmployee">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Danh sách thành viên</h5>
            </div>
            <div class="modal-body">
                <table id="myTableEmployeeUpdate" class="table table-hover">
                    <thead>
                        <div class="row" style="margin: 20px 0;">
                            <div class="col-sm-3" style="padding: 0;">
                                <label for="">Tổ phòng ban</label>
                                <select name="state" id="WorkDepartmentFilter"
                                    class="form-control js-example-basic-single">
                                    <option value="" style="color: white;" selected>Tất cả</option>
                                    {{#each WorkDepartment}}
                                    <option value="{{this._id}}" style="color: white;">{{this.title}}</option>
                                    {{/each}}
                                </select>
                            </div>
                            <div class="col-sm-3" style="padding: 0;margin-left: 10px;">
                                <label for="">Vị trí chức danh</label>
                                <select name="" id="WorkPositionFilter" class="form-control js-example-basic-single">
                                    <option value="" style="color: white;" selected>Tất cả</option>
                                    {{#each WorkPosition}}
                                    <option value="{{this._id}}" style="color: white;" {{#ifCond this.IsActive
                                        0}}disabled{{/ifCond}}>
                                        {{this.Name}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <tr>
                            <th {{#ifCond Employee.length 0}}hidden{{/ifCond}}>
                                <div class="checkbox-wrapper-42 checkbox">
                                    <input id="checkAllUpdate{{id}}" type="checkbox" class="checkUpdate{{id}}"
                                        data-id="{{id}}" />
                                    <label class="cbx" for="checkAllUpdate{{id}}"></label>
                                </div>
                            </th>
                            <th scope="col" hidden>WorkDepartment_id</th>
                            <th scope="col" hidden>WorkPosition_id </th>
                            <th scope="col">Avatar</th>
                            <th scope="col">Tên</th>
                            <th scope="col">Giới tính</th>
                            <th scope="col">Tổ / Phòng ban</th>
                            <th scope="col">Vị trí chức danh</th>
                        </tr>
                    </thead>
                    <tbody style="font-size: 13px;">
                        {{#each Employee}}
                        <tr>
                            <td>
                                <div class="">
                                    <div class="checkbox-wrapper-42 checkbox">
                                        {{!-- <p>{{json this}}</p> --}}
                                        <input id="cbx-42Update{{this._id}}" type="checkbox"
                                            class="checkUpdate{{../id}}" data-employee="{{json this}}"
                                            data-id="{{../id}}" />
                                        <label class="cbx" for="cbx-42Update{{this._id}}"></label>
                                    </div>
                                </div>
                            </td>
                            <td hidden>{{this.WorkDepartment_id}}</td>
                            <td hidden>{{this.WorkPosition_id }}</td>
                            <td style="text-align: center;">
                                {{#if this.Avatar}}
                                <img src={{this.Avatar}}
                                    style="width: 50px;height: 50px;border-radius: 50%;object-fit: cover;" alt="">
                                {{else}}
                                <img style="width: 50px;height: 50px;border-radius: 50%;object-fit: cover;"
                                    src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/User-avatar.svg/2048px-User-avatar.svg.png" />
                                {{/if}}
                            </td>
                            <td>{{this.FullName}}</td>
                            <td>{{this.Gender}}</td>
                            {{#ifCond workdepartment_IsDeleted 0}}
                            <td style="max-width: 150px;text-wrap: wrap;">{{this.workdepartment_name}}</td>
                            {{else}}
                            <td class="text-hightlight">Không xác định</td>
                            {{/ifCond}}
                            {{#ifCond workposition_IsDeleted 0}}
                            <td>{{this.workposition_name}}</td>
                            {{else}}
                            <td class="text-hightlight">Không xác định</td>
                            {{/ifCond}}
                        </tr>
                        {{/each }}
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                <button type="button" data-id="{{id}}" class="btn btn-info btnDisabledUpdate{{id}}" data-dismiss="modal"
                    onclick="handleChooseUpdate('{{id}}')" disabled>Lựa
                    chọn</button>
            </div>
        </div>
    </div>
</div>
{{else}}
{{!-- post --}}
<div class="modal fade" id="exampleModalEmployee" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="trueEmployee">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title" id="exampleModalLabel">Danh sách thành viên</h5>
            </div>
            <div class="modal-body">
                <table id="myTableEmployee" class="table datatables table-bordered table-hover table-striped">
                    <thead>
                        <div class="row" style="margin: 20px 0;font-size: 13px;">
                            <div class="col-sm-3" style="padding: 0;">
                                <label for="">Tổ phòng ban</label>
                                <select name="" id="WorkDepartmentFilterUpdate"
                                    class="form-control js-example-basic-single">
                                    <option value="" style="color: white;" selected>Tất cả</option>
                                    {{#each WorkDepartment}}
                                    <option value="{{this._id}}" style="color: white;">{{this.title}}</option>
                                    {{/each}}
                                </select>
                            </div>
                            <div class="col-sm-3" style="padding: 0;margin-left: 10px;">
                                <label for="">Vị trí chức danh</label>
                                <select name="" id="WorkPositionFilterUpdate"
                                    class="form-control js-example-basic-single">
                                    <option value="" style="color: white;" selected>Tất cả</option>
                                    {{#each WorkPosition}}
                                    <option value="{{this._id}}" style="color: white;" {{#ifCond this.IsActive
                                        0}}disabled{{/ifCond}}>
                                        {{this.Name}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <tr>
                            <th {{#ifCond Employee.length 0}}hidden{{/ifCond}}>
                                <div class="checkbox-wrapper-42 checkbox">
                                    <input id="checkAll" type="checkbox" class="check" />
                                    <label class="cbx" for="checkAll"></label>
                                </div>
                                {{!-- <div class="checkbox">
                                    <input type="checkbox" class="check" id="checkAll">
                                </div> --}}
                            </th>
                            <th scope="col" hidden>WorkDepartment_id</th>
                            <th scope="col" hidden>WorkPosition_id </th>
                            <th scope="col">Avatar</th>
                            <th scope="col">Tên</th>
                            <th scope="col">Giới tính</th>
                            <th scope="col">Tổ / Phòng ban</th>
                            <th scope="col">Vị trí chức danh</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each Employee}}
                        <tr>
                            <td>
                                <div class="checkbox-wrapper-42 checkbox">
                                    <input id="cbx-42{{this._id}}" type="checkbox" class="check"
                                        data-employee="{{json this}}" />
                                    <label class="cbx" for="cbx-42{{this._id}}"></label>
                                </div>
                            </td>
                            <td hidden>{{this.WorkDepartment_id}}</td>
                            <td hidden>{{this.WorkPosition_id }}</td>
                            <td style="text-align: center;">
                                {{#if this.Avatar}}
                                <img src={{this.Avatar}}
                                    style="width: 50px;height: 50px;border-radius: 50%;object-fit: cover;" alt="">
                                {{else}}
                                <img style="width: 50px;height: 50px;border-radius: 50%;object-fit: cover;"
                                    src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/User-avatar.svg/2048px-User-avatar.svg.png" />
                                {{/if}}
                            </td>
                            <td>{{this.FullName}}</td>
                            <td>{{this.Gender}}</td>
                            {{#ifCond workdepartment_IsDeleted 0}}
                            <td style="max-width: 150px;text-wrap: wrap;">{{this.workdepartment_name}}</td>
                            {{else}}
                            <td class="text-hightlight">Không xác định</td>
                            {{/ifCond}}
                            {{#ifCond workposition_IsDeleted 0}}
                            <td>{{this.workposition_name}}</td>
                            {{else}}
                            <td class="text-hightlight">Không xác định</td>
                            {{/ifCond}}
                        </tr>
                        {{else}}
                        {{/each }}
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-info btnDisabled" data-dismiss="modal" onclick="handleChoose()"
                    disabled>Lựa
                    chọn</button>
            </div>
        </div>
    </div>
</div>
{{/if}}



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
{{!-- checkbox post--}}
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() {
        dataLayer.push(arguments);
    }
    gtag('js', new Date());
    gtag('config', 'UA-56159088-1');
    // checkbox All
    $("#checkAll").click(function (e) {
        $(".check").prop('checked', $(this).prop('checked'));
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const btnsCheck = document.querySelectorAll(".check")
        const btnDisabled = document.querySelector(".btnDisabled")
        let count = 0
        const checkBtnDisabled = () => {
            if (count === 0) {
                btnDisabled.setAttribute("disabled", true)
            } else {
                btnDisabled.removeAttribute("disabled")
            }
        }
        for (let checked of btnsCheck) {
            checkBtnDisabled()
            checked.addEventListener("click", (e) => {
                if (checked.checked) {
                    count++
                } else {
                    count--
                }
                checkBtnDisabled()
            })
        }
    })
</script>

{{!-- post --}}
<script>
    var room = 1;
    var ListEmployee = [];
    var arrEmployeeAll = [];

    // Hàm thu thập các ID nhân viên đã chọn
    const getSelectedEmployeeIds = () => {
        const selectedIds = {};
        const listEmployeeSelects = document.querySelectorAll('.listEmployee');
        listEmployeeSelects.forEach(select => {
            selectedIds[select.id] = select.value;
        });
        return selectedIds;
    };

    const updateSelectOptions = (select, options, selectedId) => {
        const currentOptions = Array.from(select.options).map(option => option.value);
        const newOptions = options.map(option => option._id);
        const optionsToRemove = currentOptions.filter(option => !newOptions.includes(option) && option !== "");
        const optionsToAdd = options.filter(option => !currentOptions.includes(option._id));
        // Xóa các tùy chọn không còn trong danh sách
        optionsToRemove.forEach(value => {
            const optionToRemove = select.querySelector(`option[value="${value}"]`);
            if (optionToRemove) {
                select.removeChild(optionToRemove);
            }
        });

        // Thêm các tùy chọn mới
        optionsToAdd.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option._id;
            optionElement.text = option.FullName;
            select.add(optionElement);
        });
        // Đặt lại giá trị đã chọn
        select.value = selectedId;
    };

    // Hàm chính để cập nhật danh sách nhân viên
    const updateEmployeeList = async () => {
        // Lấy các ID đã chọn trước khi cập nhật
        const selectedIds = getSelectedEmployeeIds();

        // Gọi API để lấy tất cả nhân viên từ server
        const response = await fetch("/employee/getAll", { method: "GET" });
        if (!response.ok) {
            alert("Có lỗi xảy ra!");
            return;
        }
        const employees = await response.json();

        // Tạo một mảng chứa các ID nhân viên đã chọn
        const arrEmployeeId = arrEmployeeAll.map(employ => employ._id);
        // Lọc ra các nhân viên chưa được chọn
        const filterEmployee = employees.filter(item => !arrEmployeeId.includes(item._id));
        // Cập nhật các phần tử select với các tùy chọn mới
        const listEmployeeSelects = document.querySelectorAll('.listEmployee');
        listEmployeeSelects.forEach(select => {
            const selectedId = selectedIds[select.id];
            updateSelectOptions(select, filterEmployee, selectedId);
        });
    };

    // Hàm xử lý khi chọn nhân viên
    async function handleChoose() {
        const arrEmployee = [];
        const btnsCheck = document.querySelectorAll('.check');
        const employeeById = Array.from(document.querySelectorAll(".memberCount")).map(e => e.getAttribute("data-id"));
        const employeeByIdNumber = employeeById.map(Number);

        for (const btnCheck of btnsCheck) {
            if (btnCheck.checked) {
                const employeeData = btnCheck.dataset.employee;
                if (employeeData) {
                    const EmployeeToObject = JSON.parse(employeeData);
                    const checkEmployee = employeeByIdNumber.includes(EmployeeToObject._id);
                    if (!checkEmployee) {
                        arrEmployee.push(EmployeeToObject);
                        arrEmployeeAll.push(EmployeeToObject);
                    } else {
                        $.toast({
                            text: `Thành viên <strong>${EmployeeToObject.FullName}</strong> đã có trong hội đồng chấm`,
                            heading: 'Warning',
                            icon: "warning",
                            position: "top-right",
                            stack: 4,
                            showHideTransition: 'slide'
                        });
                        return;
                    }
                }
            }
        }

        // Cập nhật danh sách nhân viên
        updateEmployeeList();
        arrEmployee.forEach((item, index) => {
            const objTo = document.getElementById('education_fields');
            const divtest = document.createElement("tr");
            divtest.setAttribute("class", `form-group removeclass${room + 1} memberCount`);
            divtest.setAttribute("data-id", `${Number(item._id)}`);
            const rdiv = `removeclass${room + 1}`;
            room++;
            divtest.innerHTML = `
            <th scope="row">${room - 1}</th>
            <input hidden data-id="${item._id}" id="listEmployee"></input>
             <td>
                <p style="font-weight:600; font-size:13px;">${item.FullName ? item.FullName : ""}</p>
                <span class="textEmail" style="color:#ccc;">${item.Email ? item.Email : ""}</span>
            </td>
           <td>
            <div style="display: flex;flex-direction: column">
            <p style="font-weight:600;font-size:12px;text-wrap:wrap;">${item.workdepartment_name ? item.workdepartment_name : ""}</p>
           <p style="color:#ccc">${item.workposition_name ? item.workposition_name : ""}</p>
            </div>
            </td>
            <td style="">
                <div class="form-group">
                    <select id="ValidatedRankDetail_${room}" name="validateRank" class="form-control CommitteeRole"
                            style="transform: translateY(10px); max-width: 200px; max-height: 200px; overflow-y: hidden; font-size:12px"
                            data-target="#navbar-example2" data-offset="0">
                        <option value="1">Chủ tịch</option>
                        <option value="2" selected>Thành viên</option>
                        <option value="3">Tư vấn viên</option>
                    </select>
                </div>
            </td>
            <td style="font-size:12px">
                <div class="form-group">
                    <select id="Employee_id_${room}" name="validateRank" class="form-control listEmployee"
                            style="transform: translateY(10px); max-height: 200px; overflow-y: hidden; font-size:12px"
                            data-target="#navbar-example2" data-offset="0">
                        <option selected>Không xác định</option>
                    </select>
                </div>
            </td>
            <td style="max-width:50px">
                <div style="text-align:center">
                    <ion-icon onclick="remove_education_fields(${room});" class="icon__scoreTempDetail" name="trash-outline"></ion-icon>
                </div>
            </td>
        `;
            objTo.appendChild(divtest);
        });

        // Thông báo kết quả thêm thành viên
        let countEmployee = 0;
        for (const checked of btnsCheck) {
            if (checked.checked) {
                countEmployee++;
            }
        }
        if (countEmployee > 0) {
            $.toast({
                text: 'Bạn đã thêm thành viên thành công',
                heading: 'Thêm thành viên thành công!',
                icon: "success",
                position: "top-right",
                stack: 4,
                showHideTransition: 'slide'
            });
        } else {
            $.toast({
                text: 'Hãy chọn ít nhất 1 thành viên',
                heading: 'Thêm thất bại!',
                icon: "warning",
                position: "top-right",
                stack: 4,
                showHideTransition: 'slide'
            });
        }

        // Bỏ chọn các checkbox sau khi thêm thành viên
        for (const checked of btnsCheck) {
            if (checked.checked) {
                checked.checked = false;
            }
        }
    }

    async function remove_education_fields(rid) {
        const idEmployee = document.querySelector(`.removeclass${rid}`).getAttribute("data-id");
        if (idEmployee) {
            arrEmployeeAll = arrEmployeeAll.filter(item => item._id != idEmployee);
            const arrEmployeeId = arrEmployeeAll.map(employ => employ._id);
            const response = await fetch("/employee/getAll", { method: "GET" });
            if (!response.ok) {
                alert("Có lỗi xảy ra!");
                return;
            }
            const employee = await response.json();
            const filterEmployee = employee.filter(item => !arrEmployeeId.includes(item._id));
            ListEmployee = filterEmployee;

            const listEmployeeSelects = document.querySelectorAll(".listEmployee");
            listEmployeeSelects.forEach(select => {
                updateSelectOptions(select, ListEmployee, select.value);
            });
        }
        document.querySelector(`.removeclass${rid}`).remove();
        room--;
    }

    document.addEventListener("DOMContentLoaded", () => {
        const btnsCheck = document.querySelectorAll(".check");
        const btnDisabled = document.querySelector(".btnDisabled");
        let count = 0;
        const checkBtnDisabled = () => {
            if (count === 0) {
                btnDisabled.setAttribute("disabled", true);
            } else {
                btnDisabled.removeAttribute("disabled");
            }
        };
        for (let checked of btnsCheck) {
            checkBtnDisabled();
            checked.addEventListener("click", () => {
                if (checked.checked) {
                    count++;
                } else {
                    count--;
                }
                checkBtnDisabled();
            });
        }
    });
</script>
{{!-- update --}}
<script>
    //click lua chon
    var room = 1;
    var ListEmployee = [];
    var arrEmployeeAll = [];
    const getSelectedEmployeeIdsUpdate = () => {
        const selectedIds = {};
        const listEmployeeSelects = document.querySelectorAll('.listSecEmployee');
        listEmployeeSelects.forEach(select => {
            selectedIds[select.id] = select.value;
        });
        return selectedIds;
    };

    // Hàm đặt các tùy chọn cho một phần tử select mà không dùng innerHTML
    const updateSelectOptionsUpdate = (select, options, selectedId) => {
        const currentOptions = Array.from(select.options).map(option => option.value);
        const newOptions = options.map(option => option._id);
        const optionsToRemove = currentOptions.filter(option => !newOptions.includes(option) && option !== "");
        const optionsToAdd = options.filter(option => !currentOptions.includes(option._id));

        // Xóa các tùy chọn không còn trong danh sách
        optionsToRemove.forEach(value => {
            const optionToRemove = select.querySelector(`option[value="${value}"]`);
            if (optionToRemove) {
                select.removeChild(optionToRemove);
            }
        });

        // Thêm các tùy chọn mới
        optionsToAdd.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option._id;
            optionElement.text = option.FullName;
            select.add(optionElement);
        });

        // Đặt lại giá trị đã chọn
        select.value = selectedId;
    };

    // Hàm chính để cập nhật danh sách nhân viên
    const updateEmployeeListUpdate = async () => {
        // Lấy các ID đã chọn trước khi cập nhật
        const selectedIds = getSelectedEmployeeIdsUpdate();

        // Gọi API để lấy tất cả nhân viên từ server
        const response = await fetch("/employee/getAll", { method: "GET" });
        if (!response.ok) {
            alert("Có lỗi xảy ra!");
            return;
        }
        const employees = await response.json();

        // Tạo một mảng chứa các ID nhân viên đã chọn
        const memberData = Array.from(document.querySelectorAll(".memberCount.newMember,.memberData")).map(e => Number(e.getAttribute("data-id")));
        // Lọc ra các nhân viên chưa được chọn
        const filterEmployee = employees.filter(item => !memberData.includes(item._id));
        // Cập nhật các phần tử select với các tùy chọn mới
        const listEmployeeSelects = document.querySelectorAll('.listSecEmployee');
        listEmployeeSelects.forEach(select => {
            const selectedId = selectedIds[select.id];
            updateSelectOptionsUpdate(select, filterEmployee, selectedId);
        });
    };
    //Hàm chọn listEmployee update
    async function handleChooseUpdate(id) {
        const arrEmployee = [];
        const btnsCheck = document.querySelectorAll(`.checkUpdate${id}`);
        console.log(btnsCheck)
        // lay ra id cua scoreCommitteeDetail 
        const employeeById = Array.from(document.querySelectorAll(".memberCount.newMember,.memberData")).map(e => e.getAttribute("data-id"));
        const employeeByIdNumber = employeeById.map(Number);
        for (const btnCheck of btnsCheck) {
            if (btnCheck.checked) {
                const employeeData = btnCheck.dataset.employee;
                if (employeeData) {
                    const EmployeeToObject = JSON.parse(employeeData);
                    const checkEmployee = employeeByIdNumber.includes(EmployeeToObject._id);
                    if (!checkEmployee) {
                        arrEmployee.push(EmployeeToObject);
                        // day vao arr ben ngoai de luu tru nhung employee da lua chon
                        arrEmployeeAll.push(EmployeeToObject);
                    } else {
                        $.toast({
                            text: `Thành viên <strong>${EmployeeToObject.FullName}</strong> đã có trong hội đồng chấm`,
                            heading: 'Warning',
                            icon: "warning",
                            position: "top-right",
                            stack: 4,
                            showHideTransition: 'slide'
                        });
                        for (const checked of btnsCheck) {
                            if (checked.checked) {
                                checked.checked = !checked;
                            }
                        }
                        return;
                    }
                }
            }
        }
        updateEmployeeListUpdate();

        arrEmployee.forEach((item, index) => {
            const objTo = document.getElementById(`tbodyScoreCommitteeDetail${id}`);
            const divtest = document.createElement("tr");
            divtest.setAttribute("class", `form-group removeclass${room + 1} memberCount newMember`);
            divtest.setAttribute("data-id", `${Number(item._id)}`);
            const rdiv = `removeclass${room + 1}`;
            room++;
            divtest.innerHTML = `
                <th scope="row">${room - 1}</th>
                <input hidden data-id="${item._id} id="listEmployee"></input>
                <td>
                    <div style="display: flex;flex-direction: column">
                        <p style="font-weight:600;font-size:13px;text-wrap:wrap;">${item.FullName ? item.FullName : ""}</p>
                        <p style="color:#ccc">${item.Email ? item.Email : ""}</p>
                    </div>
                </td>
                <td style="max-width:200px">
                    <div style="display: flex;flex-direction: column">
                        <p style="font-weight:600;font-size:13px;text-wrap:wrap;">${item.workdepartment_name ? item.workdepartment_name : ""}</p>
                        <p style="color:#ccc">${item.workposition_name ? item.workposition_name : ""}</p>
                    </div>
                </td>
                <td style="max-width: 130px;">
                    <div class="form-group">
                        <select id="ValidatedRankDetail_${room}" name="validateRank" class="form-control CommitteeRole CommitteeRole_newMember"
                                style="transform: translateY(10px); max-width: 200px; max-height: 200px; overflow-y: hidden; font-size:12px"
                                data-target="#navbar-example2" data-offset="0">
                            <option value="1">Chủ tịch</option>
                            <option value="2" selected>Thành viên</option>
                            <option value="3">Tư vấn viên</option>
                        </select>
                    </div>
                </td>
                <td style="max-width: 250px; font-size:12px">
                    <div class="form-group">
                        <select id="SecEmployee_id_${room}" name="validateRank" class="form-control listEmployee listSecEmployee listSecEmployee_newMember"
                                style="transform: translateY(10px); max-width: 200px; max-height: 200px; overflow-y: hidden; font-size:12px"
                                data-target="#navbar-example2" data-offset="0">
                            <option selected>Chưa chọn thành viên</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div style="text-align:center">
                        <ion-icon onclick="remove_education_fields_update(${room});" class="icon__scoreTempDetail" name="trash-outline"></ion-icon>
                    </div>
                </td>
            `;
            objTo.appendChild(divtest);
        });
        //tim toi select
        let countEmployee = 0;
        for (const checked of btnsCheck) {
            if (checked.checked) {
                countEmployee++;
            }
        }
        if (countEmployee > 0) {
            $.toast({
                text: 'Bạn đã thêm thành viên thành công',
                heading: 'Thêm thành viên thành công!',
                icon: "success",
                position: "top-right",
                stack: 4,
                showHideTransition: 'slide'
            });
        } else {
            $.toast({
                text: 'Hãy chọn ít nhất 1 thành viên',
                heading: 'Thêm thất bại!',
                icon: "warning",
                position: "top-right",
                stack: 4,
                showHideTransition: 'slide'
            });
        }
        for (const checked of btnsCheck) {
            if (checked.checked) {
                checked.checked = !checked;
            }
        }
    }

    async function remove_education_fields_update(rid) {
        //element listSecEmployee
        const listSecEmployeeSelects = document.querySelectorAll(".listSecEmployee");
        //element member data
        let memberData = Array.from(document.querySelectorAll(".memberData")).map(e => Number(e.getAttribute("data-id")))
        const idEmployee = document.querySelector(`.removeclass${rid}`).getAttribute("data-id");
        const arrIdScoreCommitteeDetail = document.querySelector(`.removeclass${rid}`).getAttribute("data-idScoreCommitteeDetail");
        if (arrIdScoreCommitteeDetail) {
            FuncArrIdScoreCommittDetaill(arrIdScoreCommitteeDetail)
        }
        if (idEmployee) {
            arrEmployeeAll = arrEmployeeAll?.filter(item => item._id != idEmployee);
            const arrEmployeeId = arrEmployeeAll?.map(employ => employ._id);
            //memberData = memberData?.filter(item => item._id != idEmployee);
            // console.log(`memberData: ${memberData}`)
            //const arrEmployeeId = memberData?.map(employ => employ._id);
            const response = await fetch("/employee/getAll", { method: "GET" });
            if (!response.ok) {
                alert("Có lỗi xảy ra!");
                return;
            }
            const employee = await response.json();

            let filterEmployee = employee.filter(item => !arrEmployeeId.includes(item._id));
            document.querySelector(`.removeclass${rid}`).remove();
            room--;
            const idData = Array.from(document.querySelectorAll(".memberData"))?.map(e => Number(e.getAttribute("data-id")));
            // thuc hien loc lan thu 2 theo memberData
            if (idData) {
                filterEmployee = filterEmployee.filter((item) => !idData.includes(item._id));
                ListEmployee = filterEmployee;
            }

            listSecEmployeeSelects.forEach(select => {
                updateSelectOptionsUpdate(select, ListEmployee, select.value);
            });
        }

    }
</script>