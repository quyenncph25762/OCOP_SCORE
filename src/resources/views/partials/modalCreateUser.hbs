<style>
    .modal-content {
        min-width: 800px;
    }

    #AvatarPreview {
        border-radius: 50%;
    }

    @media screen and (min-width: 350px) and (max-width: 765px) {
        .modal-content {
            min-width: 100% !important;
        }
    }
</style>
<!-- Modal -->
<div class="modal fade" id="exampleModalCreateUser" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Tạo mới tài khoản</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-sm-12">
                            <p style="font-size: 16px;margin-bottom: 18px;">Thông tin người dùng</p>
                            <div class="row">
                                <input type="text" hidden id="CreatorUser_idCreate" value="{{User._id}}">
                                <div class="col-sm-3 mb-3" style="position: relative;">
                                    <div data-toggle="tooltip" data-html="true" title="Xóa ảnh" onclick="removeUpload()"
                                        style="position: absolute;top: 0;right: 0;">
                                        <ion-icon name="close-outline"></ion-icon>
                                    </div>
                                    <input type="file" id="AvatarCreate" accept="image/*" hidden>
                                    <img id="AvatarPreviewCreate" onclick="document.getElementById('Avatar').click()"
                                        style="width: 100%;height: 100%;object-fit: cover;" src="/Uploads/user.png"
                                        alt="">

                                </div>
                                <div class="col-sm-9">
                                    <div class="row">
                                        <input type="text" class="form-control" id="CodeCreate" hidden>
                                        <div class="col-sm-9 mb-3">
                                            <label for="UserNameCreate">Tên truy cập</label>
                                            <input type="text" class="form-control" id="UserNameCreate">
                                        </div>
                                        <div class="custom-control custom-switch col-md-3"
                                            style="display: flex; justify-content: center;align-items: center;">
                                            <input name="IsActiveCreate" type="checkbox" class="custom-control-input"
                                                id="IsActiveCreate" checked>
                                            <label class="custom-control-label block" for="IsActiveCreate">Kích
                                                hoạt</label>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 mb-3">
                                            <label for="FullNameCreate">Họ và tên</label>
                                            <input type="text" class="form-control" id="FullNameCreate">
                                        </div>
                                        <div class="col-sm-6 mb-3">
                                            <label for="RoleIdCreate">Vai trò</label>
                                            <select name="" id="RoleIdCreate" class="form-control">
                                                {{#each Role}}
                                                <option value="{{this._id}}" {{#ifCond this.status
                                                    0}}disabled{{/ifCond}}>{{this.title}}</option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label for="EmailCreate">Địa chỉ email</label>
                                    <input type="text" class="form-control" id="EmailCreate">
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label for="PhoneCreate">Số điện thoại</label>
                                    <input type="text" class="form-control" id="PhoneCreate">
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label for="PasswordNewCreate">Mật khẩu</label>
                                    <input type="password" class="form-control" id="PasswordNewCreate">
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label for="ConfirmPasswordCreate">Xác nhận mật khẩu</label>
                                    <input type="password" class="form-control" id="ConfirmPasswordCreate">
                                </div>
                                <p class="col-sm-6" style="font-style: italic;color: #F64E60;font-size: 13px;">* Kiểm
                                    tra kĩ thông tin
                                    trước
                                    khi thêm người dùng mới</p>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-dismiss="modal">Hủy bỏ</button>
                <button type="submit" class="btn btn-info" onclick="handleCreateUser()">
                    <div class="" style="display: flex;align-items: center;gap: 10px;">
                        <ion-icon name="save-outline"></ion-icon>
                        <p class="m-0">Lưu thông tin</p>
                    </div>
                </button>
            </div>
        </div>
    </div>
</div>


{{!-- random userName --}}
<script>
    const UserNameValue = document.querySelector("#UserNameCreate")
    function generateRandomUser(length) {
        let characters = '0123456789';
        let code = '';
        for (let i = 0; i < length; i++) {
            code += characters.charAt(Math.floor(Math.random() * characters.length));
        }
        return code;
    }
    const UserNameRandom = generateRandomUser(6)
    UserNameValue.value = `USER${UserNameRandom}`
</script>
{{!-- avatar file reader --}}
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const avatarImage = document.getElementById("AvatarPreviewCreate");
        const defaultImageUrl = avatarImage.src;
        document.getElementById("AvatarCreate").addEventListener("change", (event) => {
            const file = event.target.files[0]
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    avatarImage.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        })
        window.removeUpload = () => {
            const fileInput = document.getElementById('AvatarCreate');
            fileInput.value = ''; // Xóa nội dung của input file
            avatarImage.src = defaultImageUrl; // Đặt lại hình ảnh mặc định
        };
    })
</script>
{{!-- actions tao user --}}
<script>
    async function handleCreateUser() {
        const Code = document.getElementById("CodeCreate").value
        const UserName = document.getElementById("UserNameCreate").value
        const FullName = document.getElementById("FullNameCreate").value
        const RoleId = document.getElementById("RoleIdCreate").value
        const Email = document.getElementById("EmailCreate").value
        const Phone = document.getElementById("PhoneCreate").value
        const Password = document.getElementById("PasswordNewCreate").value
        const ConfirmPassword = document.getElementById("ConfirmPasswordCreate").value
        const CreatorUser_id = document.getElementById("CreatorUser_idCreate").value
        const IsActive = document.getElementById("IsActiveCreate").checked
        const Avatar = document.getElementById("AvatarCreate")
        if (Password.length < 6 || ConfirmPassword.length < 6) {
            $.toast({
                position: "top-right",
                heading: 'Warning',
                text: 'Mật khẩu phải từ 6 kí tự',
                icon: 'warning',
                loader: true,
                loaderBg: '#f2a654',
                showHideTransition: 'slide',
                stack: 4
            });
            return
        }
        if (Password !== ConfirmPassword) {
            $.toast({
                position: "top-right",
                heading: 'Warning',
                text: 'Mật khẩu và mật khẩu xác nhận không khớp!',
                icon: 'warning',
                loader: true,
                loaderBg: '#f2a654',
                showHideTransition: 'slide',
                stack: 4
            });
            return
        }

        const formData = new FormData()
        formData.append("Code", Code)
        formData.append("UserName", UserName)
        formData.append("FullName", FullName)
        formData.append("RoleId", Number(RoleId))
        formData.append("CreatorUser_id", CreatorUser_id)
        formData.append("IsActive", IsActive === true ? 1 : 0)
        formData.append("Email", Email)
        formData.append("Phone", Phone)
        formData.append("Password", CryptoJS.SHA256(Password).toString())
        formData.append("Avatar", Avatar.files[0])

        const response = await fetch(`/users/add`, {
            method: "POST",
            body: formData
        })
        if (response.ok) {
            localStorage.setItem('toast', JSON.stringify({
                position: "top-right",
                heading: 'Đã thêm thành viên',
                text: 'Thêm thành viên thành công',
                icon: 'success',
                loader: true,
                loaderBg: '#9EC600',
                showHideTransition: 'slide',
                stack: 4
            }));
            window.location.replace("/users")
        } else {
            const data = await response.json()
            $.toast({
                position: "top-right",
                heading: 'Thêm thất bại',
                text: data.message || 'Đã có lỗi xảy ra',
                icon: 'error',
                loader: true,
                loaderBg: '#f2a654',
                showHideTransition: 'slide',
                stack: 4
            });
        }
    }
</script>
{{!-- code random --}}
<script>
    const codeValue = document.querySelector("#CodeCreate")
    function generateRandomCode(length) {
        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789';
        let code = '';
        for (let i = 0; i < length; i++) {
            code += characters.charAt(Math.floor(Math.random() * characters.length));
        }
        return code;
    }
    const codeRandom = generateRandomCode(8)
    codeValue.value = codeRandom
</script>