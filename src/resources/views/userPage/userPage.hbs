{{> header}}
<div class="content-wrapper" id="toastRole">
    <div class="container-fluid">
        <div class="row" style="max-width: 100%; display: contents;">
            <ul class="search-customer"
                style="list-style: none; display:flex; justify-content: space-between; align-items: center;">
                <div class="import_customer_button"
                    style="list-style: none; display:flex; justify-content: space-between; align-items: center;">
                    <button class="btn btn-success" data-toggle="modal" data-target="#exampleModalCreateUser">Tạo mới
                        tài
                        khoản</button>
                </div>
                {{> modalCreateUser}}
            </ul>
            </li>
            </ul>
        </div>
    </div>

    <div class="row" style="display: contents;">
        <div class="col-lg-6" style="max-width: 100%;">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items">
                        <h5 class="card-title">Danh sách người dùng</h5>
                        <span class="d-inline-block ml-3" tabindex="0" data-toggle="tooltip" title="Thùng rác của bạn">
                            <a href="/users/trashPage">
                                <ion-icon name="trash-outline">
                                </ion-icon>
                            </a>
                        </span>
                    </div>
                    <div class="table-responsive">
                        <table id="myTable" class="table table-hover" style="font-size: 13px;">
                            <thead>
                                <tr>
                                    <th>Tên truy cập</th>
                                    <th>Họ và tên</th>
                                    <th>Vai trò</th>
                                    <th>Địa chỉ Email</th>
                                    <th>Email xác nhận</th>
                                    <th>Kích hoạt</th>
                                    <th>Thời gian tạo mới</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each Employee}}
                                <tr>
                                    <td>
                                        <img src="{{this.Avatar}}" style="width: 40px;height: 40px;object-fit: cover;"
                                            alt="">
                                        <span>{{this.UserName}}</span>
                                    </td>
                                    <td>
                                        {{this.FullName}}
                                    </td>
                                    <td>
                                        {{this.role_name}}
                                    </td>
                                    <td style="max-width: 200px;">
                                        <p style="text-wrap: wrap;">{{this.Email}}</p>
                                    </td>
                                    <td>
                                        Chưa xử lí
                                    </td>
                                    {{#ifCond IsActive 1}}
                                    <td>
                                        <div class="active"></div>
                                    </td>
                                    {{else}}
                                    <td>
                                        <div class="inactive"></div>
                                    </td>
                                    {{/ifCond}}
                                    <td>
                                        <p>{{split this.CreationTime ' ' 0}}</p>
                                    </td>
                                    <td>
                                        <div class="icons">
                                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip"
                                                title="Phân quyền">
                                                <ion-icon name="list-outline"></ion-icon>
                                            </span>
                                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip"
                                                title="Chỉnh sửa">
                                                <ion-icon name="create-outline" data-toggle="modal"
                                                    data-target="#modalUpdateUser{{this._id}}"></ion-icon>
                                            </span>
                                            {{> modalUpdateUser Role=../Role}}
                                            {{#ifCond this.isLock 0}}
                                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip"
                                                title="Khóa tài khoản">
                                                <ion-icon name="lock-closed-outline"
                                                    onclick="handleLockUser('{{this._id}}')"></ion-icon>
                                            </span>
                                            {{else}}
                                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip"
                                                title="Mở khóa tài khoản">
                                                <ion-icon name="lock-open-outline"
                                                    onclick="handleOpenUser('{{this._id}}')"></ion-icon>
                                            </span>
                                            {{/ifCond}}
                                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Xóa">
                                                <ion-icon id="icon_moveToTrash" data-userName="{{this.UserName}}"
                                                    name="trash-outline" data-id="{{this._id}}">
                                                </ion-icon>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div><!--End Row-->
    </div>
</div><!--End content-wrapper-->
{{> footer}}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="/assets/js/custom.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.2.0/crypto-js.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toastData = localStorage.getItem('toast');
        if (toastData) {
            const toast = JSON.parse(toastData);
            $.toast(toast);
            localStorage.removeItem('toast');
        }
        const btnTrash = document.querySelectorAll("#icon_moveToTrash");
        //remove One
        for (let btn of btnTrash) {
            btn.addEventListener("click", (event) => {
                const userName = event.target.dataset.username;
                $.confirm({
                    title: '<ion-icon name="trash-bin-outline"></ion-icon>',
                    content: `Bạn có chắc chắn muốn xóa ${userName} ?`,
                    buttons: {
                        confirm: {
                            text: 'Confirm',
                            btnClass: 'btn-red',
                            action: function () {
                                // Lấy ID của mục cần xóa từ thuộc tính data-id của nút
                                const id = event.target.dataset.id;
                                // Gọi API xóa mục
                                fetch(`/employee/removeToTrash/${id}`, {
                                    method: 'DELETE'
                                }).then(response => {
                                    if (response.ok) {
                                        localStorage.setItem('toast', JSON.stringify({
                                            position: "top-right",
                                            heading: 'Xóa thành công',
                                            text: 'Đã xóa thành công thành công',
                                            icon: 'success',
                                            loader: true,
                                            loaderBg: '#9EC600',
                                            showHideTransition: 'slide',
                                            stack: 4
                                        }));
                                        window.location.reload()
                                    } else {
                                        alert('Có lỗi xảy ra khi xóa mục');
                                    }
                                }).catch(error => {
                                    $.alert('Đã hủy');
                                });
                            }
                        },
                        cancel: function () {
                            $.alert('Đã hủy!');
                        }
                    }
                });
            })
        }
    })
</script>

<script>
    //Khóa tài khoản
    async function handleLockUser(iduser) {
        const response = await fetch(`/auth/get/${iduser}`, {
            method: "GET"
        })
        if (!response.ok) {
            console.log("Khong thẻ lấy đc id tài khoản")
            return
        }
        const user = await response.json()
        $.confirm({
            title: '<ion-icon name="help-circle-outline"></ion-icon>',
            content: `Bạn xác nhận khóa tài khoản: (${user.FullName})?`,
            buttons: {
                confirm: {
                    text: 'Confirm',
                    btnClass: 'btn-blue',
                    action: async function () {
                        try {
                            const response = await fetch(`/users/lockUserById/${iduser}`, {
                                method: "PATCH",
                                body: JSON.stringify({
                                    isLock: 1
                                }),
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            })
                            if (!response.ok) {
                                console.log("Lỗi khi thực hiện khóa tài khoản")
                                return
                            }
                            localStorage.setItem('toast', JSON.stringify({
                                position: "top-right",
                                heading: 'SUCCESS',
                                text: `Đã khóa tài khoản ${user.FullName}!`,
                                icon: 'success',
                                loader: true,
                                loaderBg: '#9EC600',
                                stack: 4
                            }));
                            window.location.reload()
                        } catch (error) {
                            console.log(error)
                        }
                    }
                },
                cancel: function () {
                    $.alert('Đã hủy!');
                }
            }
        });
    }
    //Mở khóa tài khoản
    async function handleOpenUser(iduser) {
        const response = await fetch(`/auth/get/${iduser}`, {
            method: "GET"
        })
        if (!response.ok) {
            console.log("Khong thẻ lấy đc id tài khoản")
            return
        }
        const user = await response.json()
        $.confirm({
            title: '<ion-icon name="help-circle-outline"></ion-icon>',
            content: `Bạn xác nhận mở khóa tài khoản: (${user.FullName})?`,
            buttons: {
                confirm: {
                    text: 'Confirm',
                    btnClass: 'btn-blue',
                    action: async function () {
                        try {
                            const response = await fetch(`/users/lockUserById/${iduser}`, {
                                method: "PATCH",
                                body: JSON.stringify({
                                    isLock: 0
                                }),
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            })
                            if (!response.ok) {
                                console.log("Lỗi khi thực hiện mở khóa tài khoản")
                                return
                            }
                            localStorage.setItem('toast', JSON.stringify({
                                position: "top-right",
                                heading: 'SUCCESS',
                                text: `Đã mở khóa tài khoản ${user.FullName}!`,
                                icon: 'success',
                                loader: true,
                                loaderBg: '#9EC600',
                                stack: 4
                            }));
                            window.location.reload()
                        } catch (error) {
                            console.log(error)
                        }
                    }
                },
                cancel: function () {
                    $.alert('Đã hủy!');
                }
            }
        });
    }
</script>